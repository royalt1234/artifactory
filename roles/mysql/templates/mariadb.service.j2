{{ ansible_managed | comment }}
#
# /etc/systemd/system/mariadb.service
#
# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Thanks to:
# Daniel Black
# Erkan Yanar
# David Strauss
# and probably others

[Unit]
Description=MariaDB database server
Documentation=man:mysqld(8)
Documentation=https://mariadb.com/kb/en/library/systemd/
After=network.target

[Install]
WantedBy=multi-user.target
Alias=mysql.service
Alias=mysqld.service


[Service]

##############################################################################
## Core requirements
##

Type=notify

# Setting this to true can break replication and the Type=notify settings
# See also bind-address mysqld option.
PrivateNetwork={{ mysql_private_network | default('false') }}

##############################################################################
## Package maintainers
##

User={{ mysql_user }}
Group={{ mysql_group }}

# To allow memlock to be used as non-root user if set in configuration
CapabilityBoundingSet=CAP_IPC_LOCK

# Prevent writes to /usr, /boot, and /etc
ProtectSystem={{ mysql_protect_system | default('full') }}

# Doesn't yet work properly with SELinux enabled
# NoNewPrivileges=true

PrivateDevices={{ mysql_private_devices | default('true') }}

# Prevent accessing /home, /root and /run/user
ProtectHome={{ mysql_protect_home | default('true') }}

# Execute pre and post scripts as root, otherwise it does it as User=
PermissionsStartOnly=true

ExecStartPre=/usr/bin/install -m 755 -o mysql -g root -d /var/run/mysqld

# Perform automatic wsrep recovery. When server is started without wsrep,
# galera_recovery simply returns an empty string. In any case, however,
# the script is not expected to return with a non-zero status.
# It is always safe to unset _WSREP_START_POSITION environment variable.
# Do not panic if galera_recovery script is not available. (MDEV-10538)
ExecStartPre=/bin/sh -c "systemctl unset-environment _WSREP_START_POSITION"
ExecStartPre=/bin/sh -c "[ ! -e /usr/bin/galera_recovery ] && VAR= || \
 VAR=`/usr/bin/galera_recovery`; [ $? -eq 0 ] \
 && systemctl set-environment _WSREP_START_POSITION=$VAR || exit 1"

# Needed to create system tables etc.
# ExecStartPre=/usr/bin/mysql_install_db -u mysql

# Start main service
# MYSQLD_OPTS here is for users to set in /etc/systemd/system/mariadb.service.d/MY_SPECIAL.conf
# Use the [service] section and Environment="MYSQLD_OPTS=...".
# This isn't a replacement for my.cnf.
# _WSREP_NEW_CLUSTER is for the exclusive use of the script galera_new_cluster
ExecStart=/usr/sbin/mysqld $MYSQLD_OPTS $_WSREP_NEW_CLUSTER $_WSREP_START_POSITION
ExecStartPost=/etc/mysql/debian-start

# Unset _WSREP_START_POSITION environment variable.
ExecStartPost=/bin/sh -c "systemctl unset-environment _WSREP_START_POSITION"

KillMode=process
KillSignal=SIGTERM

# Don't want to see an automated SIGKILL ever
SendSIGKILL=no

# Restart crashed server only, on-failure would also restart, for example, when
# my.cnf contains unknown option
Restart=on-abort
RestartSec=5s

UMask=007

##############################################################################
## USERs can override
##
##
## by creating a file in /etc/systemd/system/mariadb.service.d/MY_SPECIAL.conf
## and adding/setting the following will override this file's settings.

# Useful options not previously available in [mysqld_safe]

# Kernels like killing mysqld when out of memory because its big.
# Lets temper that preference a little.
# OOMScoreAdjust=-600
{% if ( mysqld_OOMScoreAdjust is defined ) -%}
OOMScoreAdjust={{ mysqld_OOMScoreAdjust }}
{% endif %}

# Explicitly start with high IO priority
# BlockIOWeight=1000
{% if ( mysqld_BlockIOWeight is defined ) -%}
BlockIOWeight={{ mysqld_BlockIOWeight }}
{% endif %}


# If you don't use the /tmp directory for SELECT ... OUTFILE and
# LOAD DATA INFILE you can enable PrivateTmp=true for a little more security.
PrivateTmp={{ mysql_private_tmp | default('false') }}

##
## Options previously available to be set via [mysqld_safe]
## that now needs to be set by systemd config files as mysqld_safe
## isn't executed.
##

# Number of files limit. previously [mysqld_safe] open-file-limit
#LimitNOFILE=16364
{% if ( mysqld_service_LimitNOFILE is defined ) -%}
LimitNOFILE={{ mysqld_service_LimitNOFILE }}
{% endif %}

# Maximium core size. previously [mysqld_safe] core-file-size
# LimitCore=
{% if ( mysqld_service_LimitCore is defined ) -%}
LimitCore={{ mysqld_service_LimitCore }}
{% endif %}

{% if ( mysqld_service_LimitMEMLOCK is defined ) -%}
LimitMEMLOCK={{ mysqld_service_LimitMEMLOCK }}
{% endif %}

# Nice priority. previously [mysqld_safe] nice
# Nice=-5
{% if ( mysqld_Nice is defined ) -%}
Nice={{ mysqld_Nice }}
{% endif %}


# Timezone. previously [mysqld_safe] timezone
# Environment="TZ=UTC"
{% if ( mysqld_zimezone is defined ) -%}
Environment="TZ={{ mysqld_zimezone }}"
{% endif %}

# Library substitutions. previously [mysqld_safe] malloc-lib with explicit paths
# (in LD_LIBRARY_PATH) and library name (in LD_PRELOAD).
# Environment="LD_LIBRARY_PATH=/path1 /path2" "LD_PRELOAD=
{% if ( mysqld_Environment is defined ) -%}
Environment={{ mysqld_Environment }}
{% endif %}


# Flush caches. previously [mysqld_safe] flush-caches=1
# ExecStartPre=sync
# ExecStartPre=sysctl -q -w vm.drop_caches=3
{% if ( mysqld_ExecStartPre is defined ) -%}
ExecStartPre={{ mysqld_ExecStartPre }}
{% endif %}


# numa-interleave=1 equalivant
# Change ExecStart=numactl --interleave=all /usr/sbin/mysqld......

# crash-script equalivent
# FailureAction=
{% if ( mysqld_FailureAction is defined ) -%}
FailureAction={{ mysqld_FailureAction }}
{% endif %}



